begin
	begin
		begin
			integer var1, var5[-98..100, -70..19]
			var1 <= 32
			integer var2, var3[75]
			get var3[var2]
		end
		loop
			exit
			boolean var1[-37..41], var4[60]
		end
		if {
			var1[87] <= var4[-(58)]
		yields
			false
		} then
			boolean var2[31..52, 35..97], var5[-49..6]
			var2[19, (95) / (-(68))] <= false
			boolean var3[8]
			put skip, "world", ":D"
			var2[41, 87] <= var3[((50) / (23)) - (41)]
		end
		while (true) | (false) do
			boolean var8, var7[-77..56]
			integer var6, var11[13, 18..28], var12[36, -26..-25]
			put skip, (var12[((var6) + (10)) + (98), (var6) * (var6)]) + (-(var11[88, -(15)])), skip
			var1[-(15)] <= false
		end
	end
	loop
		if {
			integer var1[-2..45, 94], var3[5], var7
		yields
			false
		} then
			put skip, "hello", 46
			exit when (true)
		end
		loop
			exit when (true)
			integer var5[17, 71], var3[26..73]
		end
		var5[{
			var3[var3[34]] <= 83
		yields
			(79) - (-(53))
		}, var3[(var5[4, 19]) / (45)]] <= {
			integer var1[56, -54..45]
		yields
			var5[var3[var1[3, 84]], var3[var3[4]]]
		}
	end
	procedure proc2
	begin
		put {
			get var5[var5[var5[100, 33], var5[25, 76]], -((80) * (37))], var3[9], var5[var3[(28) * (91)], 66]
		yields
			var3[var5[var3[50], 25]]
		}, skip, skip
		get var3[var3[{
			return
		yields
			-(44)
		}]]
	end

	integer function func10
	begin
		while (func10) <= ({
			return (func10)
		yields
			func10
		}) do
			var5[16, 84] <= var5[72, 64]
			return (46)
		end
		while {
			integer var1[-14..88, 59], var2[-56..-3, 39], var5
		yields
			false
		} do
			put ":D"
			put "!?", skip
			put skip
		end
		if !({
			return (-(func10))
		yields
			false
		}) then
			put skip, skip
			integer var5[-35..24], var2[43, 20..53], var3[-81..64, -87..0]
			put ":D", skip, "world"
		end
		if {
			integer var1[-52..-9, 85]
		yields
			false
		} then
			return (var3[func10, -(var5[29])])
			boolean var1
			var5[30] <= var2[var2[var5[var2[51, 85]], -(-(70))], var5[29]]
			get var5[func10]
			return (func10)
		else
			return (var5[22])
		end
	end

end

