begin
	boolean function func5(boolean arg5, boolean arg1, integer arg3)
	begin
		if arg1 then
			return (false)
			integer var1
			return (true)
			put skip, skip, ":D"
			boolean var6[40, 30..77], var4
		else
			return (true)
			return (arg5)
			return (true)
		end
		loop
			return (var4)
			exit
			get arg3, var1, arg3
		end
	end

	if func5((38) >= (21), func5(func5(false, true, 18), false, (70) + (42)), {
		put skip, ":D"
	yields
		{
			integer var2[16, 83], var3[73, 83..84]
		yields
			var3[16, 80]
		}
	}) then
		integer var1, var5[60..91, 45]
		get var1
	end
	if true then
		procedure proc1(integer arg1, integer arg2, integer arg6)
		begin
			get arg6, arg1, var1
			return
		end

		proc1(var5[var1, var5[{
			get var5[var1, 93]
		yields
			var5[53, 62]
		}, {
			put var1, ":D"
		yields
			33
		}]], (83) / (-(var5[(42) + (0), var5[16, 54]])), 90)
	else
		procedure proc2
		begin
			var1 <= var5[67, var5[72, -(var1)]]
			return
		end

		var5[81, -({
			put "hello", 50, "!?"
		yields
			(28) / (93)
		})] <= {
			boolean var2[82], var3[41, -62..76]
		yields
			var1
		}
		var5[var5[((var1) - (var1)) * (4), 50], var5[{
			var1 <= var5[25, 74]
		yields
			56
		}, (54) / (var1)]] <= var1
		procedure proc4(integer arg2)
		begin
			return
		end

		loop
			get var1, var1
			put "!?", ":D", 2
			proc4(var1)
			exit
		end
	end
	proc4(28)
	boolean function func1(boolean arg1)
	begin
		if func5(!({
			integer var6
		yields
			false
		}), {
			return (false)
		yields
			arg1
		}, (5) / (-(20))) then
			var1 <= var1
			return (arg1)
			integer var1[17, 14..20], var2[18..26]
			var1[67, var5[17, (68) + ((5) * (87))]] <= 10
			boolean var4, var3[65, 39], var7[89..100]
		end
		put skip
	end

end

