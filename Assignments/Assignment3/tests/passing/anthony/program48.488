begin
	while false do
		while true do
			exit when (!((-(-(0))) <= (48)))
			exit
		end
		put "hello", 90, skip
		begin
			put skip, "hello"
			put "!?", 26, "!?"
			put 69, "!?", ":D"
		end
		exit when ({
			put skip, "!?", "world"
		yields
			!(true)
		})
		begin
			boolean var1
			var1 <= true
			boolean var5[3, 40]
			integer var3[2]
		end
	end
	while false do
		while {
			boolean var1[87..94], var2[-68..70], var6[78]
		yields
			((39) - ((23) * (6))) <= (24)
		} do
			exit when (true)
			boolean var4[46, 93], var1, var5[73, 63]
		end
		exit when (true)
		begin
			boolean var2[-52..26]
		end
	end
	while true do
		boolean var3[38, 81..85], var6[37], var7
		procedure proc2(boolean arg1)
		begin
			boolean var1[-8..3, -51..-1], var6[53..94, 60]
			return
		end

	end
	var4[94, 45] <= false
	procedure proc4(boolean arg1)
	begin
		var7 <= var6[(7) * ({
			var6[40] <= true
		yields
			78
		})]
		loop
			exit when (false)
			put skip, -(-(-(6))), "!?"
			exit when ((false) & ((true) | (!((30) <= (81)))))
			var6[74] <= true
			exit when (true)
		end
		if false then
			return
			return
			return
		else
			boolean var1[78], var3[62..72]
			boolean var4[-95..79, 48]
		end
		return
		begin
			boolean var3[50..74], var1[41], var5[64..80]
			put "world"
			put skip, -(-(86)), skip
			var3[87] <= false
		end
	end

end

