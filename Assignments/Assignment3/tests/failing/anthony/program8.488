begin
	if {
		loop
			exit
			exit
			exit when ((79) - ((3) >= (false)))
			exit when (98)
		end
	yields
		false
	} then
		exit
		loop
			integer var1, var2
			exit when (var2[true, true])
			put skip, skip, true
			exit
		end
		if var2[({
			exit when (!(97))
		yields
			(false) | (87)
		}) != (false), -({
			exit when (20)
		yields
			4
		})] then
			exit
			var2[false, false] <= true
			integer var1[41..20], var2[55], var3[-49..-98, 21]
			exit
			put "hello", skip
		end
		begin
			exit
			var2[true, -(true)] <= -(true)
			integer var1, var2[77], var3[14]
			boolean var1
		end
		if {
			var1[true] <= true
		yields
			true
		} then
			put "world"
			put (false) & (10), ":D"
		end
	else
		integer function func2(boolean arg2, boolean arg3, integer arg4)
		begin
			arg2[arg2[arg3[true, false]]] <= func2(60, var1[true], -(false))
			get arg3[arg3[false], false], arg3
			get arg3, arg3
			exit when (func2(35, 92, arg3[true, ((54) + (false)) >= ((10) = (false))]))
		end

		var2[false, (false) & (84)] <= true
		if !({
			return (func2(!(68), func2(4, 5, false), false))
		yields
			false
		}) then
			return (var1)
			return
		end
		exit when ({
			return
		yields
			false
		})
	end
	if 45 then
		put skip
		exit when (var1)
		var1[false] <= {
			return
		yields
			var2[true]
		}
	else
		if var1 then
			var1 <= true
			exit when (var1[false])
			put "hello", skip, (func2(func2(63, !(var2), true), 77, true)) > ((var2) > (-(-(false))))
			exit when (var2)
			put ":D"
		end
		integer var1[47..-56], var2[-78..-85, 49..-35], var3[-31..-36]
		if var2[{
			var3[true, true] <= ((98) < (false)) != (65)
		yields
			var1[true]
		}, {
			exit
		yields
			var2[false]
		}] then
			exit
		else
			integer var1[67, -67..-75], var2[73], var3[-67..-83]
			exit when (var2[true])
			boolean var1, var2[-20..-67, 22]
		end
		var2 <= !({
			put "world", true
		yields
			true
		})
	end
end

