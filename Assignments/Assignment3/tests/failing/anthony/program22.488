begin
	if {
		begin
			exit
			exit
		end
	yields
		false
	} then
		boolean function func1(integer arg1, boolean arg2, boolean arg3)
		begin
			get arg2[func1((func1(true, 80, 98)) != ((arg1) / (false)), 97, 21)], arg2
			put "!?"
			get arg3
			exit when (arg1)
			exit when (arg1)
		end

		procedure proc2(boolean arg4)
		begin
			return (true)
			exit when (1)
			return
			return
			integer var1[41]
		end

	else
		put -(func1({
			exit when (51)
		yields
			80
		}, {
			exit
		yields
			-(false)
		}, {
			return
		yields
			func1(false, 35, 26)
		}))
		put "world", skip, skip
		begin
			put skip, skip, false
			return
			put func1(false, (32) / (func1(func1(true, 1, 3), 35, 61)), 2), skip, skip
			return (!(!(49)))
			return
		end
	end
	while {
		integer function func2(boolean arg7, integer arg8)
		begin
			arg8[func1(true, 45, 57), func1(arg7[arg7], !(96), !(arg8))] <= func1(-(-(false)), func2(81, func1(arg7, 54, arg8)), 54)
			arg8[true] <= func1(false, !(20), func2(func2(30, false), false))
			arg8[false] <= false
			integer var1, var2[98]
		end

	yields
		({
			exit
		yields
			true
		}) <= (func1((19) > (true), (65) - (false), !(35)))
	} do
		integer function func1(boolean arg2, integer arg3, boolean arg4)
		begin
			put "world", skip, skip
			get arg2, arg2[arg2]
			proc2(arg3)
			arg2 <= !(func1(arg3[true, arg2[false]], arg2[func1(arg4, 17, 0), (86) <= (false)], (arg3[true, true]) - (arg2[false, false])))
			exit
		end

		put "hello"
		loop
			boolean var1, var2, var3[-66..-82]
			exit when (72)
		end
		loop
			var2 <= 76
			exit when (func1(func1(!(!(89)), func1(true, !(92), (6) / (true)), func1(!(88), false, func1(6, true, 72))), false, 83))
		end
		while 57 do
			get var2[var1[func1(func1(true, 18, 53), 23, func1(29, true, 65)), true], (func1(22, true, !(77))) >= (func1(false, !(57), 42))], var1, var2
			put (func1(-(-(true)), 27, func1(func1(72, false, 61), true, func1(67, false, 76)))) & ((!(42)) - (func1((false) | (86), (28) / (true), func1(20, true, 71)))), true, skip
		end
	end
	while (49) - (false) do
		exit
		proc2(func1({
			get var2[false], var3
		yields
			false
		}, false, {
			get var1[func1(true, 69, 3), var3[false]]
		yields
			(5) >= (false)
		}))
		if 17 then
			return (true)
			return
			proc2(func1(34, var1, 25))
		else
			exit
			put skip
		end
		procedure proc2(integer arg5)
		begin
			integer var1, var2
			var2 <= ((true) = (!(33))) = (var1[func1(false, func1(79, false, 34), var2[false, true]), var2[true]])
			exit when (61)
			var1[true, false] <= func1(func1((var2[false]) / (func1(false, 24, 77)), false, 74), (func1((95) - (var2), func1(false, var1, 74), 12)) <= (func1(true, 82, (13) * (true))), func1(func1(!(arg5), true, 61), false, !(arg5[true, true])))
		end

		begin
			put skip
			exit when (80)
			boolean var1, var2[-99..-99, 22], var3[67]
			var3 <= func1(func1(94, false, func1(62, true, 59)), false, !(!(37)))
		end
	end
	proc2(true)
	proc2(false)
end

