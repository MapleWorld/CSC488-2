begin
	while {
		integer function func1
		begin
			put skip
			exit
			put skip
			exit
		end

	yields
		true
	} do
		while 99 do
			boolean var1[78]
			put true, -(false)
			exit when (89)
		end
		if 6 then
			exit
			exit
		end
		procedure proc1(integer arg1, integer arg2)
		begin
			exit
			arg2 <= var1
			get var1, var1, var1[var1[(67) > ((4) < (true))]]
			integer var1[-34..-37, 4], var2[6..-74, 53..-18]
			put ":D"
		end

		integer var1, var2[91..-13]
	end
	if !(var1[{
		exit
	yields
		var1[false]
	}]) then
		proc1(false, var1[({
			put "hello"
		yields
			var1
		}) = (-(var1[true, false]))])
		while 37 do
			put skip
			put true, skip
			put skip, skip
		end
	end
	integer var1[75, 29..-95]
	put "world", "!?"
	while !(44) do
		exit
		begin
			exit when (!(var2[var1[true]]))
		end
		get var1[var1, true]
		var1 <= 79
	end
end

